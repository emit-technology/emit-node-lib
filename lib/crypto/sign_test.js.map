{"version":3,"file":"sign_test.js","sourceRoot":"","sources":["../../src/crypto/sign_test.ts"],"names":[],"mappings":";;AAAA,iCAA8C;AAE9C,oBAAoB;AACpB,MAAM,GAAG,GAAG,kEAAkE,CAAC;AAE/E,MAAM,CAAC,GAAG,oEAAoE,CAAC;AAG/E,gDAAgD;AAEhD,MAAM,SAAS,GAAG,IAAA,mBAAY,EAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAAA;AACxD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAEvB,MAAM,OAAO,GAAG,IAAA,gBAAS,EAAC,SAAS,EAAC,CAAC,CAAC,CAAA;AAEtC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC","sourcesContent":["import {personalSign,ecrecover} from './sign';\n\n// ecsign,ecrecover,\nconst key = \"7b67dcc6de11e6a360bfa8a8856b8c8576529ee54c12bb715b207cd63c15b207\";\n\nconst m = \"0x64c2d1dab59dee2c7741acee3826dad50cdb7f6adb28a159b1bc6aa5374a2b24\";\n\n\n// const sig = ecsign(m,Buffer.from(key,'hex'));\n\nconst personMsg = personalSign(Buffer.from(key,'hex'),m)\nconsole.log(personMsg);\n\nconst recover = ecrecover(personMsg,m)\n\nconsole.log(recover);\n"]}